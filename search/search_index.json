{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83d\udcda Welcome to Chuk Docs","text":"<p>\ud83d\ude80 Documentation for various installation and configuration procedures.</p>"},{"location":"#categories","title":"\ud83d\udcd1 Categories","text":""},{"location":"#development","title":"Development \ud83d\udcbb","text":"<ul> <li>\ud83d\udcdd Git Version Control</li> <li>\ud83d\udc68\u200d\ud83d\udcbb Programming Languages</li> </ul>"},{"location":"#other","title":"Other \ud83d\udccb","text":"<ul> <li>\u2601\ufe0f Cloudflare Images</li> <li>\ud83d\udcc4 Contact</li> <li>\ud83d\udcc4 Faq</li> <li>\ud83d\udc33 NVIDIA Docker Setup</li> <li>\ud83c\udfb5 PyAudio Setup</li> <li>\ud83d\udcc4 Spicetify</li> </ul>"},{"location":"#remote-tools","title":"Remote Tools \ud83d\udd04","text":"<ul> <li>\ud83d\udda5\ufe0f RustDesk Remote Desktop</li> </ul>"},{"location":"#security","title":"Security \ud83d\udd12","text":"<ul> <li>\ud83d\udd11 SSH Configuration</li> <li>\ud83d\udd12 SSL Certificates</li> </ul>"},{"location":"#system","title":"System \u2699\ufe0f","text":"<ul> <li>\ud83c\udfae AMD GPU Drivers</li> <li>\ud83d\udcbb QEMU Virtualization</li> </ul>"},{"location":"#web-services","title":"Web Services \ud83c\udf10","text":"<ul> <li>\ud83c\udf10 Apache Server</li> <li>\ud83d\udc19 Gitea Git Server</li> <li>\u2601\ufe0f Seafile Cloud</li> <li>\ud83d\udecd\ufe0f Shopware E-Commerce</li> </ul>"},{"location":"#quick-links","title":"\ud83d\udd0d Quick Links","text":"<ul> <li>\ud83d\udcde Contact Support</li> <li>\u2753 Frequently Asked Questions</li> </ul> <p>\ud83d\udd04 Last updated: 2025-04-07 03:50</p>"},{"location":"contact/","title":"Contact","text":"<p>vist hackerman-1337.xyz</p>"},{"location":"Installation/","title":"\ud83d\udcda Knowledge Base","text":""},{"location":"Installation/#your-centralized-documentation-hub","title":"Your centralized documentation hub","text":"<p>Last updated: 2024-12-24 02:32</p>"},{"location":"Installation/#quick-navigation","title":"\ud83d\ude80 Quick Navigation","text":"<ul> <li>\u2699\ufe0f System</li> <li>\ud83c\udf10 Web Services</li> <li>\ud83d\udd12 Security</li> <li>\ud83d\udcbb Development</li> <li>\ud83d\udd04 Remote Tools</li> <li>\ud83d\udccb Other</li> </ul>"},{"location":"Installation/#system","title":"\u2699\ufe0f System","text":"<ul> <li><code>amdgpuinstall</code></li> <li><code>nvida-docker</code></li> <li><code>qemu</code></li> </ul>"},{"location":"Installation/#web-services","title":"\ud83c\udf10 Web Services","text":"<ul> <li><code>Shopware</code></li> <li><code>apache</code></li> <li><code>gitea</code></li> <li><code>seafile</code></li> </ul>"},{"location":"Installation/#security","title":"\ud83d\udd12 Security","text":"<ul> <li><code>SSH</code></li> <li><code>certs</code></li> </ul>"},{"location":"Installation/#development","title":"\ud83d\udcbb Development","text":"<ul> <li><code>git</code></li> <li><code>languages</code></li> </ul>"},{"location":"Installation/#remote-tools","title":"\ud83d\udd04 Remote Tools","text":"<ul> <li><code>rustdesk</code></li> </ul>"},{"location":"Installation/#other","title":"\ud83d\udccb Other","text":"<ul> <li><code>pyaudio</code></li> </ul>"},{"location":"Installation/#contributing","title":"\ud83d\udcdd Contributing","text":"<p>Feel free to add new documentation or improve existing ones. Make sure to:</p> <ul> <li>Place new files in appropriate directories</li> <li>Use clear, descriptive names</li> <li>Follow the markdown formatting guidelines</li> </ul> <p>This index is automatically generated. Last refresh: 2024-12-24 02:32</p>"},{"location":"Installation/SSH/","title":"Setup ssh secure","text":""},{"location":"Installation/SSH/#use-ssh-key-authentication","title":"Use SSH Key Authentication","text":"<p>Generate key on local machine: <pre><code>ssh-keygen -t ed25519\n</code></pre></p>"},{"location":"Installation/SSH/#copy-key-to-server","title":"Copy key to server:","text":"<pre><code>ssh-copy-id user@server_ip\n</code></pre>"},{"location":"Installation/SSH/#disable-password-authentication","title":"Disable password authentication:","text":"<pre><code>sudo nano /etc/ssh/sshd_config\n# Set PasswordAuthentication no\nsudo systemctl restart ssh\n</code></pre>"},{"location":"Installation/SSH/#change-the-default-ssh-port","title":"Change the Default SSH Port","text":""},{"location":"Installation/SSH/#edit-ssh-config","title":"Edit SSH config:","text":"<pre><code>sudo nano /etc/ssh/sshd_config\n# Change Port 22 to Port 2222 (or any other number)\nsudo systemctl restart ssh\n</code></pre>"},{"location":"Installation/SSH/#limit-user-access","title":"Limit User Access","text":""},{"location":"Installation/SSH/#create-a-new-user","title":"Create a new user:","text":"<pre><code>sudo adduser sshuser\nsudo usermod -aG sudo sshuser\n</code></pre>"},{"location":"Installation/SSH/#disable-root-login","title":"Disable root login:","text":"<pre><code>sudo nano /etc/ssh/sshd_config\n# Set PermitRootLogin no\nsudo systemctl restart ssh\n</code></pre>"},{"location":"Installation/SSH/#use-a-firewall","title":"Use a Firewall","text":""},{"location":"Installation/SSH/#install-and-configure-ufw","title":"Install and configure UFW:","text":"<p>make sure to open news ssh port before updating <pre><code>sudo apt install ufw\nsudo ufw allow 2222/tcp\nsudo ufw enable\n</code></pre></p>"},{"location":"Installation/SSH/#keep-software-updated","title":"Keep Software Updated","text":"<pre><code>sudo apt update\nsudo apt upgrade\n</code></pre>"},{"location":"Installation/SSH/#implement-fail2ban","title":"Implement Fail2Ban","text":"<pre><code>sudo apt install fail2ban\nsudo cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local\nsudo nano /etc/fail2ban/jail.local\n# Configure as needed\nsudo systemctl enable fail2ban\nsudo systemctl start fail2ban\n</code></pre>"},{"location":"Installation/SSH/#disable-unused-features","title":"Disable Unused Features","text":""},{"location":"Installation/SSH/#edit-ssh-config_1","title":"Edit SSH config:","text":"<pre><code>sudo nano /etc/ssh/sshd_config\n# Set:\n# AllowTcpForwarding no\n# X11Forwarding no\n# AllowAgentForwarding no\nsudo systemctl restart ssh\n</code></pre>"},{"location":"Installation/SSH/#setup-gotify-for-ssh-login","title":"Setup Gotify for ssh login","text":""},{"location":"Installation/SSH/#copy-the-following-script-to-usrlocalbinssh-gotify-notif","title":"copy the following script to /usr/local/bin/ssh-gotify-notif","text":""},{"location":"Installation/SSH/#set-url-gotify-url-and-token","title":"set url gotify url and token","text":"<pre><code>exec &amp;&gt; /dev/null #Hide output\n\nGotify_URL='https://example.tld/gotify'\nGotify_Token='gotify-app-token'\n\nnotify() {\n\n        now=$(date -d \"-60 seconds\" +%s) #Get current time minus 60 seconds\n        end=$((SECONDS+30)) #Set 30s Timeout for loop\n\n        while [ $SECONDS -lt $end ]; do\n\n                SSHdate=$(date -d \"$(who |grep pts|tail -1 | awk '{print $3, $4}')\" +%s) #Check for the latest SSH session\n\n                if [ $SSHdate -ge $now ]; then #Once who is updated continue with sending Notification\n\n                        title=\"SSH Login for $(/bin/hostname -f)\"\n                        message=\"$(/usr/bin/who | grep pts)\"\n\n                        /usr/bin/curl -X POST -s \\\n                                -F \"title=${title}\" \\\n                                -F \"message=${message}\" \\\n                                -F \"priority=5\" \\\n                                \"${Gotify_URL}/message?token=${Gotify_Token}\"\n\n                        break\n                fi\n        done\n\n}\n\nnotify &amp; #Run in background to prevent holding up the login process\n</code></pre>"},{"location":"Installation/SSH/#make-it-exacutable","title":"make it exacutable","text":"<pre><code>chmod +x /usr/local/bin/ssh-gotify-notif\n</code></pre>"},{"location":"Installation/SSH/#in-the-file-etcpamdsshd-add-the-following-line","title":"In the file /etc/pam.d/sshd add the following line","text":"<pre><code>session optional pam_exec.so /usr/local/bin/ssh-gotify-notif\n</code></pre>"},{"location":"Installation/Shopware/","title":"Shopware installation","text":""},{"location":"Installation/Shopware/#install-updates-and-stuff","title":"Install Updates and stuff","text":"<pre><code>sudo apt update\nsudo apt upgrade -y\nsudo apt install zsh zsh-syntax-highlighting zsh-autosuggestions tree ufw htop ncdu yt-dlp btop thefuck python3 python3-pip neofetch python3-pip jq git aria2 cmake make gcc build-essential docker docker.io docker-compose tmux net-tools curl wget -y\nsudo sh -c '&gt; /etc/motd'\nchmod -x /etc/update-motd.d/*\n\nsed -i 's/^PrintMotd.*/PrintMotd no/' /etc/ssh/sshd_config\nsed -i 's/^PrintLastLog.*/PrintLastLog no/' /etc/ssh/sshd_config\nif ! grep -q \"^PrintMotd no\" /etc/ssh/sshd_config; then\n    echo -e \"PrintMotd no\" &gt;&gt; /etc/ssh/sshd_config\nfi\nif ! grep -q \"^PrintLastLog no\" /etc/ssh/sshd_config; then\n    echo -e \"PrintLastLog no\" &gt;&gt; /etc/ssh/sshd_config\nfi\n\nufw allow openssh\nufw allow 22\nufw enable\nsystemctl restart sshd\nsudo dpkg-reconfigure -plow unattended-upgrades\nsystemctl enable unattended-upgrades.service\n</code></pre>"},{"location":"Installation/Shopware/#installing-php-81","title":"Installing php 8.1","text":"<pre><code>sudo apt update &amp;&amp; sudo apt install php8.1 php8.1-common php8.1-mysql php8.1-xml php8.1-xmlrpc php8.1-curl php8.1-gd php8.1-imagick php8.1-cli php8.1-intl php8.1-zip php8.1-mbstring -y\n</code></pre>"},{"location":"Installation/Shopware/#install-mariadbserver","title":"install mariadbserver","text":"<pre><code>sudo apt install mariadb-server mariadb-client -y\n</code></pre>"},{"location":"Installation/Shopware/#run-mysql-setup","title":"Run mysql setup","text":"<p><pre><code>mysql_secure_installation\n</code></pre> </p>"},{"location":"Installation/Shopware/#setup-database-replace-yourpassword-with-a-secure-password-and-write-it-down","title":"Setup database replace YOURPASSWORD with a secure password and write it down!","text":"<pre><code>mariadb -u root -p\nCREATE DATABASE shopware;\nGRANT ALL PRIVILEGES ON shopware.* TO 'shopware_user'@'localhost' IDENTIFIED BY 'YOURPASSWORD';\nFLUSH PRIVILEGES;\nEXIT;\n</code></pre>"},{"location":"Installation/Shopware/#edit-etcphp81apache2phpini","title":"edit <code>/etc/php/8.1/apache2/php.ini</code>","text":""},{"location":"Installation/Shopware/#set-values-to","title":"set values to","text":"<p><code>memory_limit = 512M</code> <code>post_max_size = 32M</code> <code>upload_max_filesize = 32M</code> <code>opcache.memory_consumption = 256</code> </p>"},{"location":"Installation/Shopware/#install-composer","title":"Install Composer","text":"<pre><code>php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\nphp -r \"if (hash_file('sha384', 'composer-setup.php') === 'edb40769019ccf227279e3bdd1f5b2e9950eb000c3233ee85148944e555d97be3ea4f40c3c2fe73b22f875385f6a5155') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\"\nphp composer-setup.php\nphp -r \"unlink('composer-setup.php');\"\nsudo mv composer.phar /usr/bin/composer\n</code></pre>"},{"location":"Installation/Shopware/#enable-ssl","title":"enable ssl","text":"<p><code>sudo a2enmod ssl</code></p>"},{"location":"Installation/Shopware/#set-ip-to-domain-cloudflare","title":"set ip to domain cloudflare","text":""},{"location":"Installation/Shopware/#get-your-ssl-crt-and-key-from-cloudflare","title":"get your ssl crt and key from cloudflare","text":"<p>  and put it in the right place  <code>mkdir -p /etc/ssl/yourdomain.com</code> <code>/etc/ssl/yourdomain.com/cert.crt</code> <code>/etc/ssl/yourdomain.com/cert.key</code> </p>"},{"location":"Installation/Shopware/#apache-config-edit","title":"Apache config, edit","text":"<p><code>/etc/apache2/sites-available/000-default.conf</code></p> <pre><code>&lt;VirtualHost *:443&gt;\n    ServerName yourdomain.com\n    DocumentRoot /var/www/html\n\n    SSLEngine on\n    SSLCertificateFile /etc/ssl/yourdomain.com/cert.crt\n    SSLCertificateKeyFile /etc/ssl/yourdomain.com/cert.key\n    SSLCertificateChainFile /etc/ssl/yourdomain.com/cert.crt\n\n    &lt;Directory /var/www/html&gt;\n        Options Indexes FollowSymLinks MultiViews\n        AllowOverride All\n        Require all granted\n    &lt;/Directory&gt;\n\n    ErrorLog ${APACHE_LOG_DIR}/shopware_error.log\n    CustomLog ${APACHE_LOG_DIR}/shopware_access.log combined\n&lt;/VirtualHost&gt;\n</code></pre>"},{"location":"Installation/Shopware/#open-port-443","title":"open port 443","text":"<pre><code>ufw allow 443\n</code></pre>"},{"location":"Installation/Shopware/#restart-apache2","title":"restart apache2","text":"<pre><code>sudo systemctl restart apache2.service\n</code></pre>"},{"location":"Installation/Shopware/#get-installer","title":"get installer","text":"<pre><code>cd /var/www/html\nrm index.html\nwget https://github.com/shopware/web-recovery/releases/latest/download/shopware-installer.phar.php\n</code></pre>"},{"location":"Installation/Shopware/#set-installer-write-premission","title":"set installer write premission","text":"<p><code>sudo chown -R www-data:www-data /var/www/html</code></p>"},{"location":"Installation/Shopware/#go-to-url","title":"go to url","text":"<p><code>https://yourdomain.com/shopware-installer.phar.php</code></p>"},{"location":"Installation/Shopware/#follow-the-installer-when-done-you-get-a-404-dont-worry","title":"follow the installer when done you get a 404 dont worry","text":""},{"location":"Installation/Shopware/#goto","title":"goto","text":"<p><code>/var/www/html</code></p>"},{"location":"Installation/Shopware/#and-run","title":"and run","text":"<p><code>composer install</code></p>"},{"location":"Installation/Shopware/#now-edit","title":"now edit","text":"<p><code>/etc/apache2/sites-available/000-default.conf</code></p>"},{"location":"Installation/Shopware/#and-change","title":"and change","text":"<p><code>/var/www/html</code></p>"},{"location":"Installation/Shopware/#to","title":"to","text":"<p><code>/var/www/html/public</code></p>"},{"location":"Installation/Shopware/#restart-apache2_1","title":"restart apache2","text":"<p><code>sudo systemctl restart apache2</code> <code>sudo a2enmod rewrite</code></p>"},{"location":"Installation/Shopware/#got-to-yourdomaincom","title":"got to yourdomain.com","text":"<p>and follow the configuration</p>"},{"location":"Installation/Shopware/#block-port-80","title":"block port 80","text":"<p><code>ufw deny 80</code></p>"},{"location":"Installation/Shopware/#edit","title":"edit","text":"<p><code>/var/ww/html/.env</code> <code>/var/ww/html/.env.local</code>  and set APP_URL to shop url yourdomain.com</p>"},{"location":"Installation/apache/","title":"Apache Installation and Configuration","text":""},{"location":"Installation/apache/#installupdate-apache-php-modules","title":"Install/Update Apache PHP Modules","text":"<pre><code># Install/reinstall PHP Apache module\nsudo apt-get install --reinstall libapache2-mod-php8.1\n\n# Enable required Apache modules\nsudo a2enmod php8.1\nsudo a2enmod ssl\nsudo a2enmod rewrite\nsudo a2enmod proxy\nsudo a2enmod proxy_http\nsudo a2enmod proxy_wstunnel\n\n# Restart Apache service\nsudo systemctl restart apache2\n\n# Verify Apache status\nsystemctl status apache2.service\n</code></pre>"},{"location":"Installation/apache/#common-apache-modules","title":"Common Apache Modules","text":"<ul> <li><code>php8.1</code>: PHP 8.1 module</li> <li><code>ssl</code>: HTTPS/SSL support</li> <li><code>proxy</code>: Basic proxy functionality</li> <li><code>proxy_http</code>: HTTP proxy support</li> <li><code>proxy_wstunnel</code>: WebSocket support</li> <li><code>rewrite</code>: URL rewriting</li> <li><code>headers</code>: Custom HTTP headers</li> </ul>"},{"location":"Installation/apache/#additional-commands","title":"Additional Commands","text":"<pre><code># List enabled modules\napache2ctl -M\n\n# Disable a module\nsudo a2dismod module_name\n\n# Test configuration\napache2ctl configtest\n\n# View error logs\ntail -f /var/log/apache2/error.log\n</code></pre>"},{"location":"Installation/certs/","title":"\ud83d\udcdc Certificates","text":"<ul> <li>CompTIA A+ - Entry-level certification for IT technicians.</li> <li>Linux Essentials - Basic understanding of Linux operating system.</li> <li>CompTIA Security+ - Basic security certification for IT security professionals.</li> <li>Linux Professional Institute LPIC-1 - First certification level in professional Linux administration.</li> <li>Cisco Certified Network Associate (CCNA) - Introductory network engineering certification.</li> <li>CSI Linux Certified Investigator - Intro to investigations using CSI Linux.</li> <li>CSI Linux Certified Computer Forensic Investigator - Basic computer forensic skills.</li> <li>CSI Linux Certified Dark Web Investigator - Basic dark web investigation skills.</li> <li>CSI Linux Certified OSINT Analyst - Open source intelligence gathering fundamentals.</li> <li>CSI Linux Certified Social Media Investigator - Social media investigation fundamentals.</li> <li>CSI Linux Certified Covert Comms Specialist (CSIL-C3S) - Introduction to covert communications.</li> <li>Cisco Certified CyberOps Associate - Entry-level cybersecurity operations certification.</li> <li>HTB Certified Penetration Testing Specialist (HTB CPTS) - Basic penetration testing skills certification from Hack The Box.</li> <li>Linux Professional Institute LPIC-2 - Advanced level of professional Linux administration.</li> <li>CompTIA PenTest+ - Intermediate penetration testing skills.</li> <li>Cisco Certified Network Professional (CCNP) - Advanced network engineering certification.</li> <li>Certified Information Privacy Professional - Data privacy laws and procedures.</li> <li>Linux Professional Institute LPIC-3 Mixed Environments - Expertise in Linux in mixed IT environments.</li> <li>Offensive Security Certified Professional (OSCP) - Advanced penetration testing certification.</li> <li>GIAC Penetration Tester (GPEN) - Advanced skills in penetration testing.</li> <li>Certified Ethical Hacker (CEH) - Comprehensive ethical hacking and penetration testing skills.</li> <li>HTB Certified Bug Bounty Hunter (HTB CBBH) - Advanced bug bounty hunting skills certification.</li> <li>HTB Certified Defensive Security Analyst (HTB CDSA) - Defensive cybersecurity skills.</li> <li>HTB Certified Web Exploitation Expert (HTB CWEE) - Advanced web application exploitation skills.</li> <li>Certified in Open Source Intelligence - Advanced techniques in open source intelligence.</li> <li>GIAC Open Source Intelligence Certification (GOSI) - Expert level open source intelligence skills.</li> <li>Cisco Certified Internetwork Expert (CCIE) - Expert-level network engineering certification.</li> <li>CSI Linux Certified INSTructor - Teaching certification for CSI Linux courses, implies deep understanding and ability to instruct.</li> <li>https://www.acilearning.com/products/itpro/</li> <li>https://boson.com/</li> </ul>"},{"location":"Installation/cloudflare-images/","title":"Cloudflare images","text":""},{"location":"Installation/cloudflare-images/#cloudflare-images","title":"Cloudflare Images","text":"<p>Upload script <pre><code>#!/bin/bash\n# upload_image.sh\n#\n# Usage: ./upload_image.sh path/to/image.jpg\n#\n# This script uploads an image to Cloudflare Images and prints out the image URL.\n\n# Replace these with your configuration values.\nTOKEN=\"\"\nACCOUNT_ID=\"\"\nAPI_URL=\"https://api.cloudflare.com/client/v4/accounts/${ACCOUNT_ID}/images/v1\"\n\nif [ $# -ne 1 ]; then\n  echo \"Usage: $0 image_path\"\n  exit 1\nfi\n\nIMAGE_PATH=\"$1\"\n\nif [ ! -f \"$IMAGE_PATH\" ]; then\n  echo \"Error: File does not exist: $IMAGE_PATH\"\n  exit 1\nfi\n\nresponse=$(curl -s -X POST -F file=@\"$IMAGE_PATH\" \\\n  -H \"Authorization: Bearer ${TOKEN}\" \\\n  \"${API_URL}\")\n\n# Use 'jq' to parse the JSON response if installed.\nif command -v jq &gt;/dev/null 2&gt;&amp;1; then\n  url=$(echo \"$response\" | jq -r '.result.variants[0]')\n  echo \"Image URL: $url\"\nelse\n  echo \"Response:\"\n  echo \"$response\"\n  echo \"Consider installing jq (https://stedolan.github.io/jq/) for better JSON output.\"\nfi\n</code></pre></p> <p>Setting Varinates My Varients are: </p> <p>the one i have set are</p> p pixels 1080p 1920 x 1080 1440p 2560 x 1440 2160p 3840 x 2160 2880p 5120 x 2880 4320p 7680 x 4320 720p 1280 x 720 max 20000 x 20000 <p>i have set the max to 20000 x 20000 just in case . i uploded the image above with the script and cloudflre auto returned 4320p i dont know whay because the image is 824 x 847 so 1080p is fine it probably uses the biggest resoltuin that is not 2 big like 20000 x 20000</p>"},{"location":"Installation/cloudflare-images/#generating-an-api-token","title":"Generating an Api Token","text":"<ul> <li>Got To Profile on the right top.</li> <li>Than go to API Tokens</li> <li>Click Create New.</li> <li>Click on Get started at Custom token</li> <li>Give it a Name Like images</li> <li>At Permissions select the item Cloudflare Images</li> <li>also selct edit if you want to upload images via that token</li> <li>you can leave Account Resources as it is</li> <li>on ip filtering set it to \"Is not in\" and set the ip to 1.1.1.1 if you want to allow all ips</li> <li>Now press Continue to summary</li> <li>Copy the api TOKEN</li> <li>Done!</li> </ul>"},{"location":"Installation/git/","title":"\ud83d\udcdd Git","text":""},{"location":"Installation/git/#setup-git-cli-and-git-lfs","title":"setup git cli and git lfs","text":""},{"location":"Installation/git/#install","title":"Install","text":""},{"location":"Installation/git/#install-git","title":"install git","text":"<pre><code>sudo apt install git\n</code></pre>"},{"location":"Installation/git/#install-git-lfs-if-you-need","title":"install git lfs if you need","text":"<pre><code>curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash\nsudo apt-get install git-lfs\n</code></pre>"},{"location":"Installation/git/#login-in-cli","title":"login in cli","text":"<pre><code>git config user.name my-name\ngit config user.email my-email\ngit config --global credential.helper store\n</code></pre>"},{"location":"Installation/git/#now-clone-or-push-to-a-repo-where-you-need-to-login-type-user-name-when-asked-and-access-token-for-password","title":"now clone or push to a repo where you need to login type user name when asked and Access Token for password.","text":""},{"location":"Installation/git/#if-you-want-to-delete-login-details-shred-git-credentials-thsi-will-delete-the-file-forever","title":"if you want to delete login details shred .git-credentials thsi will delete the file forever!","text":"<pre><code>shred -v -n 20 -u .git-credentials\n</code></pre>"},{"location":"Installation/git/#get-github-release-latest-link","title":"get github release latest link","text":"<p>https://github.com/USER/PROJECT/releases/latest/download/package.zip</p> <p>Example:</p> <p>https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64</p>"},{"location":"Installation/gitea/","title":"\ud83d\udc19 Gitea","text":""},{"location":"Installation/gitea/#gitea-via-docker-compose","title":"Gitea via docker-compose","text":""},{"location":"Installation/gitea/#requirements","title":"Requirements","text":"<p>and ubuntu or debian vps with a static ip</p>"},{"location":"Installation/gitea/#install","title":"Install","text":""},{"location":"Installation/gitea/#update-and-upgrade-os-and-install-docker-and-docker-compose","title":"update and upgrade os and install docker and docker-compose","text":"<pre><code>sudo apt update \nsudo apt upgrade\nsudo apt install docker docker.io docker-compose apparmor\n</code></pre>"},{"location":"Installation/gitea/#setup-docker-compose-file","title":"setup docker compose file","text":"<p>edit docker-compose.yml <pre><code>nano docker-compose.yml\n</code></pre></p>"},{"location":"Installation/gitea/#paste","title":"paste","text":"<pre><code>version: \"3\"\n\nnetworks:\n  gitea:\n    external: false\n\nservices:\n  server:\n    image: gitea/gitea:1.21.4\n    container_name: gitea\n    environment:\n      - USER_UID=1000\n      - USER_GID=1000\n    restart: always\n    networks:\n      - gitea\n    volumes:\n      - ./gitea:/data\n      - /etc/timezone:/etc/timezone:ro\n      - /etc/localtime:/etc/localtime:ro\n    ports:\n      - \"3001:3000\"\n      - \"22:22\"\n</code></pre>"},{"location":"Installation/gitea/#start-the-docker-container","title":"start the docker container","text":"<pre><code>docker-compose up -d\n</code></pre>"},{"location":"Installation/gitea/#setup-apache-config-chnage-the-domain-and-subdomain-how-you-like","title":"setup apache config chnage the domain and subdomain how you like","text":"<pre><code>#git.yourdomain.com\n&lt;VirtualHost *:443&gt;\n    ServerName git.yourdomain.com\n\n    # SSL/TLS Configuration (assuming you have SSL certificate/key files)\n    SSLEngine on\n    SSLCertificateFile /etc/ssl/yourdomain.com/yourdomain.com.pem\n    SSLCertificateKeyFile /etc/ssl/yourdomain.com/yourdomain.com.key\n\n    # Proxy Configuration\n    ProxyPass / http://localhost:3001/\n    ProxyPassReverse / http://localhost:3001/\n\n    # Additional Proxy Headers (optional)\n    ProxyPreserveHost On\n    ProxyRequests Off\n    AllowEncodedSlashes NoDecode\n\n    # Logging (optional)\n    TransferLog /var/log/apache2/git.yourdomain.com_access.log\n    ErrorLog /var/log/apache2/git.yourdomain.com_error.log\n\n    # SSL Protocol and Cipher Suite (optional)\n    SSLProtocol all -SSLv3 -TLSv1 -TLSv1.1\n    SSLCipherSuite HIGH:!aNULL:!MD5:!3DES\n&lt;/VirtualHost&gt;\n</code></pre>"},{"location":"Installation/gitea/#point-you-domain-to-the-ip-of-the-server","title":"point you domain to the ip of the server","text":""},{"location":"Installation/gitea/#go-to-the-url-and-follow-the-wizard-leave-everything-how-it-is-and-just-add-you-options","title":"go to the url and follow the wizard leave everything how it is and just add you options","text":""},{"location":"Installation/gitea/#to-use-it-with-git-cli-go-to-your-profile-pic-and-settings-in-the-drop-down-click-on-applications-set-a-name-select-permissions-from-the-drop-down-you-probably-only-need-repository-read-and-write-for-git-cli-and-click-on-generate-token-copy-the-token-from-the-top-and-setup-your-git-cli","title":"to use it with git cli go to your profile pic and settings in the drop down, click on applications set a name, Select permissions from the drop down you probably only need repository Read and Write for git cli and click on Generate Token. Copy the token from the top and setup your git cli.","text":""},{"location":"Installation/languages/","title":"\ud83d\udd24 Languages","text":""},{"location":"Installation/languages/#languages-to-learn","title":"Languages to learn","text":"<ul> <li>Assembly (1949) [Imperative Programming]</li> <li>C (1972)  [Imperative Programming]</li> <li>Python (1991)  [Imperative Programming]</li> <li>PyTorch (2016) [Differentiable Programming]</li> <li>Haskell (1990) [Functional Programming]</li> <li>Coq (1989) [Dependently Typed]</li> <li>Verilog (1984) | VHDL (1980) [Hardware]</li> <li>Rust</li> <li>PHP</li> </ul>"},{"location":"Installation/qemu/","title":"QEMU","text":"<p>add bridge network</p> <pre><code>nmcli con add type bridge con-name br0 ifname br0\nnmcli con add type bridge-slave ifname enx00133b00043c master br0\n</code></pre>"},{"location":"Installation/rustdesk/","title":"\ud83d\udda5\ufe0f RustDesk","text":""},{"location":"Installation/rustdesk/#rustdesk","title":"Rustdesk","text":""},{"location":"Installation/rustdesk/#requirements","title":"Requirements","text":"<p>and ubuntu or debian vps with a static ip</p>"},{"location":"Installation/rustdesk/#install","title":"Install","text":""},{"location":"Installation/rustdesk/#allow-ssh-ufw","title":"allow ssh ufw","text":"<pre><code>ufw allow 22\n</code></pre>"},{"location":"Installation/rustdesk/#allow-rustdesk-in-ufw","title":"allow rustdesk in ufw","text":"<pre><code>ufw allow 21115:21119/tcp\nufw allow 8000/tcp\nufw allow 21116/udp\nsudo ufw enable\n</code></pre>"},{"location":"Installation/rustdesk/#download-rustdesk-and-run-install-script","title":"download rustdesk and run install script","text":"<pre><code>wget https://raw.githubusercontent.com/techahold/rustdeskinstall/master/install.sh\nchmod +x install.sh\n./install.sh\n</code></pre> <p>follow the installer steps set to ip not domain</p> <p>got to your cloudflare and point dns record without proxying to the ip address</p> <p>you can find the api key at /opt/rustdesk/id_ed25519.pub <pre><code>cat /opt/rustdesk/id_ed25519.pub\n</code></pre></p>"},{"location":"Installation/seafile/","title":"\ud83c\udf0a Seafile","text":""},{"location":"Installation/seafile/#seafile-installation","title":"Seafile Installation","text":""},{"location":"Installation/seafile/#fixing-seafile-csrf-issues","title":"Fixing Seafile CSRF Issues","text":""},{"location":"Installation/seafile/#quick-fix-one-liner-commands","title":"Quick Fix (One-Liner Commands)","text":"<pre><code># Find seahub_settings.py\nfind /opt/seafile -name \"seahub_settings.py\"\n\n# Add CSRF settings (replace with your domain)\necho -e \"CSRF_TRUSTED_ORIGINS = ['https://file.exmaple.com']\\nCSRF_COOKIE_SECURE = True\\nCSRF_COOKIE_SAMESITE = 'Strict'\" | sudo tee -a /path/to/seahub_settings.py\n\n# Restart services\ndocker-compose down &amp;&amp; docker-compose up -d &amp;&amp; sudo systemctl restart apache2\n</code></pre>"},{"location":"Installation/seafile/#detailed-solution","title":"Detailed Solution","text":""},{"location":"Installation/seafile/#1-apache-configuration","title":"1. Apache Configuration","text":"<pre><code>&lt;VirtualHost *:443&gt;\n    ServerName file.example.com\n    SSLEngine on\n    SSLCertificateFile /etc/ssl/chuk/chuk.dev.pem\n    SSLCertificateKeyFile /etc/ssl/chuk/chuk.dev.key\n\n    ProxyRequests Off\n    ProxyPreserveHost On\n\n    RequestHeader set X-Forwarded-Proto \"https\"\n    RequestHeader set X-Forwarded-Port \"443\"\n    RequestHeader set X-Forwarded-For \"%{REMOTE_ADDR}s\"\n    RequestHeader set X-Real-IP \"%{REMOTE_ADDR}s\"\n    RequestHeader set Host \"file.example.com\"\n\n    ProxyPass / http://localhost:801/\n    ProxyPassReverse / http://localhost:801/\n\n    RewriteEngine On\n    RewriteCond %{HTTP:Upgrade} websocket [NC]\n    RewriteCond %{HTTP:Connection} upgrade [NC]\n    RewriteRule ^/?(.*) \"ws://localhost:801/$1\" [P,L]\n\n    ErrorLog /var/log/apache2/file.example.com_error.log\n    CustomLog /var/log/apache2/file.example.com_access.log combined\n&lt;/VirtualHost&gt;\n</code></pre>"},{"location":"Installation/seafile/#2-docker-compose-configuration","title":"2. Docker Compose Configuration","text":"<pre><code>services:\n  seafile:\n    environment:\n      - SEAFILE_SERVER_HOSTNAME=file.example.com\n      - SEAFILE_SERVER_SCHEME=https\n      - SERVICE_URL=https://file.example.com\n      - CSRF_TRUSTED_ORIGINS=https://file.example.com\n</code></pre>"},{"location":"Installation/seafile/#common-issues-and-solutions","title":"Common Issues and Solutions","text":"<ol> <li>CSRF Verification Failed</li> <li>Ensure no trailing slash in CSRF_TRUSTED_ORIGINS</li> <li>Domain must match exactly in all configurations</li> <li> <p>Use complete https:// URL in settings</p> </li> <li> <p>Required Apache Modules <pre><code>sudo a2enmod ssl proxy proxy_http proxy_wstunnel headers rewrite\n</code></pre></p> </li> <li> <p>If Changes Don't Take Effect <pre><code>docker-compose down\ndocker-compose up -d\nsudo systemctl restart apache2\n</code></pre></p> </li> </ol> <p>Remember to replace <code>file.example.com</code> with your actual domain name in all configurations.</p>"},{"location":"Installation/spicetify/","title":"Installing Spicetify on Ubuntu Linux","text":"<p>Spicetify is a multiplatform command-line tool for customizing the official Spotify client. This guide covers the steps to install Spicetify on Ubuntu Linux using the pre-built binary.</p>"},{"location":"Installation/spicetify/#prerequisites","title":"Prerequisites","text":"<ul> <li>Spotify Client: Make sure you have installed the Spotify client.   If you haven't installed Spotify yet, you can install it via the official apt repository. See the Spotify for Linux page for more details.</li> <li>Terminal: Basic familiarity with using a terminal window.</li> </ul>"},{"location":"Installation/spicetify/#1-install-spicetify-cli","title":"1. Install Spicetify CLI","text":"<p>Open your terminal and run the following command to install the Spicetify CLI:</p> <pre><code>curl -fsSL https://raw.githubusercontent.com/spicetify/cli/main/install.sh | sh\n</code></pre> <p>This command downloads and executes the installation script directly, adding Spicetify to your system.</p>"},{"location":"Installation/spicetify/#2-install-spicetify-marketplace-optional","title":"2. Install Spicetify Marketplace (Optional)","text":"<p>The Spicetify Marketplace provides a convenient sidebar tab within Spotify for accessing themes, extensions, and snippets. To install it, run:</p> <pre><code>curl -fsSL https://raw.githubusercontent.com/spicetify/marketplace/main/resources/install.sh | sh\n</code></pre>"},{"location":"Installation/spicetify/#3-set-file-permissions","title":"3. Set File Permissions","text":"<p>For Spicetify to be able to modify the required Spotify files, you must grant write permissions to the Spotify directories. Assuming Spotify is installed via the apt repo and the installation directory is <code>/usr/share/spotify</code>, run:</p> <pre><code>sudo chmod a+wr /usr/share/spotify\nsudo chmod a+wr -R /usr/share/spotify/Apps\n</code></pre> <p>Note: If your Spotify installation path differs, adjust the commands accordingly.</p>"},{"location":"Installation/spicetify/#4-applying-customizations","title":"4. Applying Customizations","text":"<p>After installing and configuring the permissions, back up the original Spotify files and apply the Spicetify customizations with:</p> <pre><code>spicetify backup apply\n</code></pre> <p>This command will create a backup of your original settings and then apply the current customizations from your Spicetify setup.</p>"},{"location":"Installation/spicetify/#5-updating-spicetify","title":"5. Updating Spicetify","text":"<p>When Spotify updates its client, you may need to re-apply Spicetify or update it:</p> <ul> <li>Reapply Changes: <pre><code>spicetify backup apply\n</code></pre></li> <li>Upgrade Spicetify (if required): <pre><code>spicetify upgrade\n</code></pre></li> </ul> <p>Check the Spicetify documentation for further details on managing updates and troubleshooting.</p>"},{"location":"Installation/spicetify/#6-launch-spotify","title":"6. Launch Spotify","text":"<p>Once completed, launch the Spotify client. You should see your custom theme and any enabled Marketplace extensions applied to the interface.</p>"},{"location":"Installation/spicetify/#conclusion","title":"Conclusion","text":"<p>You now have Spicetify installed on your Ubuntu system! Enjoy customizing your Spotify client. If you run into any issues, please refer to the Spicetify CLI GitHub page for additional support.</p>"},{"location":"Installation/amdgpu/amdgpuinstall/","title":"\ud83c\udfae AMD GPU","text":"<p>graphic drivers are in kernel and mesa</p> <p>compute driver </p> <p>goto https://www.amd.com/de/support/linux-drivers download for ubtuntu install deb file  <pre><code>sudo apt install rocm-opencl-runtime --no-install-recommends\n</code></pre></p>"},{"location":"Installation/nvidiagpu/nvida-docker/","title":"\ud83c\udfaf NVIDIA Docker","text":"<p><pre><code>curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \\\n  &amp;&amp; curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \\\n    sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | \\\n    sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list\n</code></pre> <pre><code>sudo apt-get update\nsudo apt-get install -y nvidia-container-toolkit\n</code></pre></p>"},{"location":"Installation/python/pyaudio/","title":"\ud83d\udd0a PyAudio","text":"<pre><code>sudo apt-get install portaudio19-dev\n</code></pre>"}]}